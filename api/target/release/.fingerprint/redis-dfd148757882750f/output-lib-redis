{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/pipeline.rs","byte_start":3627,"byte_end":3754,"line_start":99,"line_end":102,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::ResponseError,","highlight_start":1,"highlight_end":42},{"text":"                \"Invalid response when parsing multi response\"","highlight_start":1,"highlight_end":63},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/pipeline.rs:99:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m99\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::ResponseError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m101\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Invalid response when parsing multi response\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m102\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs","byte_start":18530,"byte_end":18698,"line_start":582,"line_end":585,"column_start":34,"column_end":31,"is_primary":false,"text":[{"text":"                            _ => fail!((","highlight_start":34,"highlight_end":41},{"text":"                                crate::types::ErrorKind::TypeError,","highlight_start":1,"highlight_end":68},{"text":"                                \"Cannot parse redis data (3)\"","highlight_start":1,"highlight_end":62},{"text":"                            )),","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs:582:34\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m582\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m____________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m583\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                       crate::types::ErrorKind::TypeError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                       \"Cannot parse redis data (3)\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m                   )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs","byte_start":18756,"byte_end":18912,"line_start":587,"line_end":590,"column_start":30,"column_end":27,"is_primary":false,"text":[{"text":"                        _ => fail!((","highlight_start":30,"highlight_end":37},{"text":"                            crate::types::ErrorKind::TypeError,","highlight_start":1,"highlight_end":64},{"text":"                            \"Cannot parse redis data (2)\"","highlight_start":1,"highlight_end":58},{"text":"                        )),","highlight_start":1,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs:587:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                        _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m______________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m588\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            crate::types::ErrorKind::TypeError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m589\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            \"Cannot parse redis data (2)\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m590\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs","byte_start":18985,"byte_end":19105,"line_start":594,"line_end":597,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                crate::types::ErrorKind::TypeError,","highlight_start":1,"highlight_end":52},{"text":"                \"Cannot parse redis data (1)\"","highlight_start":1,"highlight_end":46},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/streams.rs:594:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m594\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m595\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                crate::types::ErrorKind::TypeError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m596\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Cannot parse redis data (1)\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m597\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":4390,"byte_end":4456,"line_start":131,"line_end":131,"column_start":23,"column_end":89,"is_primary":false,"text":[{"text":"            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),","highlight_start":23,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:131:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m131\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":5018,"byte_end":5084,"line_start":154,"line_end":154,"column_start":23,"column_end":89,"is_primary":false,"text":[{"text":"            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),","highlight_start":23,"highlight_end":89}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:154:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Err(_) => fail!((ErrorKind::InvalidClientConfig, \"Redis URL did not parse\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":5273,"byte_end":5332,"line_start":162,"line_end":162,"column_start":17,"column_end":76,"is_primary":false,"text":[{"text":"        None => fail!((ErrorKind::InvalidClientConfig, \"Missing hostname\")),","highlight_start":17,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:162:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m162\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        None => fail!((ErrorKind::InvalidClientConfig, \"Missing hostname\")),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":6837,"byte_end":6972,"line_start":208,"line_end":211,"column_start":27,"column_end":19,"is_primary":false,"text":[{"text":"                Err(_) => fail!((","highlight_start":27,"highlight_end":34},{"text":"                    ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":52},{"text":"                    \"Username is not valid UTF-8 string\"","highlight_start":1,"highlight_end":57},{"text":"                )),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:208:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                Err(_) => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m___________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m210\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"Username is not valid UTF-8 string\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":7217,"byte_end":7352,"line_start":217,"line_end":220,"column_start":27,"column_end":19,"is_primary":false,"text":[{"text":"                Err(_) => fail!((","highlight_start":27,"highlight_end":34},{"text":"                    ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":52},{"text":"                    \"Password is not valid UTF-8 string\"","highlight_start":1,"highlight_end":57},{"text":"                )),","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:217:27\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m                Err(_) => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m___________________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    \"Password is not valid UTF-8 string\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":8694,"byte_end":8814,"line_start":260,"line_end":263,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::InvalidClientConfig,","highlight_start":1,"highlight_end":48},{"text":"                \"URL provided is not a redis URL\"","highlight_start":1,"highlight_end":50},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:260:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m261\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::InvalidClientConfig,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m262\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"URL provided is not a redis URL\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m263\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":18924,"byte_end":19033,"line_start":555,"line_end":558,"column_start":14,"column_end":11,"is_primary":false,"text":[{"text":"        _ => fail!((","highlight_start":14,"highlight_end":21},{"text":"            ErrorKind::AuthenticationFailed,","highlight_start":1,"highlight_end":45},{"text":"            \"Password authentication failed\",","highlight_start":1,"highlight_end":46},{"text":"        )),","highlight_start":1,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:555:14\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m555\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m______________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m556\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            ErrorKind::AuthenticationFailed,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m557\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            \"Password authentication failed\",\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m558\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs","byte_start":19661,"byte_end":19783,"line_start":584,"line_end":587,"column_start":18,"column_end":15,"is_primary":false,"text":[{"text":"            _ => fail!((","highlight_start":18,"highlight_end":25},{"text":"                ErrorKind::ResponseError,","highlight_start":1,"highlight_end":42},{"text":"                \"Redis server refused to switch database\"","highlight_start":1,"highlight_end":58},{"text":"            )),","highlight_start":1,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/connection.rs:584:18\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m584\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m            _ => fail!((\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m__________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m585\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                ErrorKind::ResponseError,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m586\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                \"Redis server refused to switch database\"\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            )),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|______________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33037,"byte_end":33078,"line_start":1030,"line_end":1030,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1030:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33037,"byte_end":33078,"line_start":1030,"line_end":1030,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1030:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33037,"byte_end":33078,"line_start":1030,"line_end":1030,"column_start":9,"column_end":50,"is_primary":false,"text":[{"text":"        from_redis_value_for_num_internal!(u8, v)","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1030:9\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1030\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        from_redis_value_for_num_internal!(u8, v)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num_internal` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33176,"byte_end":33205,"line_start":1038,"line_end":1038,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33176,"byte_end":33205,"line_start":1038,"line_end":1038,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33176,"byte_end":33205,"line_start":1038,"line_end":1038,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i8);","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1038:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1038\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i8);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33207,"byte_end":33237,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33207,"byte_end":33237,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33207,"byte_end":33237,"line_start":1039,"line_end":1039,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1039:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1039\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33239,"byte_end":33269,"line_start":1040,"line_end":1040,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33239,"byte_end":33269,"line_start":1040,"line_end":1040,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33239,"byte_end":33269,"line_start":1040,"line_end":1040,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u16);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1040:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1040\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u16);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33271,"byte_end":33301,"line_start":1041,"line_end":1041,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33271,"byte_end":33301,"line_start":1041,"line_end":1041,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33271,"byte_end":33301,"line_start":1041,"line_end":1041,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1041:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1041\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33303,"byte_end":33333,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33303,"byte_end":33333,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33303,"byte_end":33333,"line_start":1042,"line_end":1042,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1042:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1042\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33335,"byte_end":33365,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33335,"byte_end":33365,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33335,"byte_end":33365,"line_start":1043,"line_end":1043,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1043:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1043\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33367,"byte_end":33397,"line_start":1044,"line_end":1044,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33367,"byte_end":33397,"line_start":1044,"line_end":1044,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33367,"byte_end":33397,"line_start":1044,"line_end":1044,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1044:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1044\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33399,"byte_end":33430,"line_start":1045,"line_end":1045,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33399,"byte_end":33430,"line_start":1045,"line_end":1045,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33399,"byte_end":33430,"line_start":1045,"line_end":1045,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(i128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1045:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1045\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(i128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33432,"byte_end":33463,"line_start":1046,"line_end":1046,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1046:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1046\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33432,"byte_end":33463,"line_start":1046,"line_end":1046,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1046:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1046\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33432,"byte_end":33463,"line_start":1046,"line_end":1046,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(u128);","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1046:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1046\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(u128);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33465,"byte_end":33495,"line_start":1047,"line_end":1047,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1047:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1047\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33465,"byte_end":33495,"line_start":1047,"line_end":1047,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1047:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1047\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33465,"byte_end":33495,"line_start":1047,"line_end":1047,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f32);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1047:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1047\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f32);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33497,"byte_end":33527,"line_start":1048,"line_end":1048,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1048:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1048\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33497,"byte_end":33527,"line_start":1048,"line_end":1048,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1048:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1048\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33497,"byte_end":33527,"line_start":1048,"line_end":1048,"column_start":1,"column_end":31,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(f64);","highlight_start":1,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1048:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1048\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(f64);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33529,"byte_end":33561,"line_start":1049,"line_end":1049,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1049:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33529,"byte_end":33561,"line_start":1049,"line_end":1049,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1049:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33529,"byte_end":33561,"line_start":1049,"line_end":1049,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(isize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1049:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1049\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(isize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32303,"byte_end":32359,"line_start":1007,"line_end":1007,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33563,"byte_end":33595,"line_start":1050,"line_end":1050,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1050:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32514,"byte_end":32570,"line_start":1011,"line_end":1011,"column_start":27,"column_end":83,"is_primary":false,"text":[{"text":"                Err(_) => invalid_type_error!(v, \"Could not convert from string.\"),","highlight_start":27,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33563,"byte_end":33595,"line_start":1050,"line_end":1050,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1050:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32604,"byte_end":32671,"line_start":1013,"line_end":1013,"column_start":18,"column_end":85,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not convertible to numeric.\"),","highlight_start":18,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32868,"byte_end":32909,"line_start":1022,"line_end":1022,"column_start":17,"column_end":58,"is_primary":false,"text":[{"text":"                from_redis_value_for_num_internal!($t, v)","highlight_start":17,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":33563,"byte_end":33595,"line_start":1050,"line_end":1050,"column_start":1,"column_end":33,"is_primary":false,"text":[{"text":"from_redis_value_for_num!(usize);","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_num!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32694,"byte_end":32731,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num {","highlight_start":1,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_num_internal!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":32022,"byte_end":32068,"line_start":1000,"line_end":1000,"column_start":1,"column_end":47,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_num_internal {","highlight_start":1,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1050:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1050\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_num!(usize);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_num` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":34007,"byte_end":34066,"line_start":1063,"line_end":1063,"column_start":21,"column_end":80,"is_primary":false,"text":[{"text":"                    invalid_type_error!(v, \"Response status not valid boolean\");","highlight_start":21,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1063:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1063\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    invalid_type_error!(v, \"Response status not valid boolean\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":34321,"byte_end":34381,"line_start":1072,"line_end":1072,"column_start":21,"column_end":81,"is_primary":false,"text":[{"text":"                    invalid_type_error!(v, \"Response type not bool compatible.\");","highlight_start":21,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1072:21\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1072\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    invalid_type_error!(v, \"Response type not bool compatible.\");\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":34469,"byte_end":34529,"line_start":1076,"line_end":1076,"column_start":18,"column_end":78,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not bool compatible.\"),","highlight_start":18,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1076:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1076\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not bool compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":34860,"byte_end":34922,"line_start":1087,"line_end":1087,"column_start":18,"column_end":80,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not string compatible.\"),","highlight_start":18,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1087:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1087\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not string compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":35356,"byte_end":35418,"line_start":1099,"line_end":1099,"column_start":25,"column_end":87,"is_primary":false,"text":[{"text":"                None => invalid_type_error!(v, \"Response type not vector compatible.\"),","highlight_start":25,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1099:25\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1099\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                None => invalid_type_error!(v, \"Response type not vector compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":35570,"byte_end":35632,"line_start":1103,"line_end":1103,"column_start":18,"column_end":80,"is_primary":false,"text":[{"text":"            _ => invalid_type_error!(v, \"Response type not vector compatible.\"),","highlight_start":18,"highlight_end":80}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1103:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            _ => invalid_type_error!(v, \"Response type not vector compatible.\"),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `invalid_type_error` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38197,"byte_end":38255,"line_start":1179,"line_end":1179,"column_start":29,"column_end":87,"is_primary":false,"text":[{"text":"                            invalid_type_error!(v, \"Bulk response of wrong dimension\")","highlight_start":29,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":38629,"byte_end":38674,"line_start":1188,"line_end":1188,"column_start":26,"column_end":71,"is_primary":false,"text":[{"text":"                    _ => invalid_type_error!(v, \"Not a bulk response\")","highlight_start":26,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"trailing semicolon in macro used in expression position","code":{"code":"semicolon_in_expressions_from_macros","explanation":null},"level":"warning","spans":[{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":110,"byte_end":111,"line_start":5,"line_end":5,"column_start":54,"column_end":55,"is_primary":true,"text":[{"text":"        return Err(::std::convert::From::from($expr));","highlight_start":54,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":360,"byte_end":402,"line_start":14,"line_end":14,"column_start":9,"column_end":51,"is_primary":false,"text":[{"text":"        fail!(invalid_type_error_inner!($v, $det))","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39039,"byte_end":39101,"line_start":1198,"line_end":1198,"column_start":21,"column_end":83,"is_primary":false,"text":[{"text":"                    invalid_type_error!(items, \"Bulk response of wrong dimension\")","highlight_start":21,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40022,"byte_end":40062,"line_start":1224,"line_end":1224,"column_start":42,"column_end":82,"is_primary":false,"text":[{"text":"    ($name:ident, $($other:ident,)*) => (from_redis_value_for_tuple!($($other,)*);)","highlight_start":42,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39675,"byte_end":39719,"line_start":1216,"line_end":1216,"column_start":9,"column_end":53,"is_primary":false,"text":[{"text":"        from_redis_value_for_tuple_peel!($($name,)*);","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":40068,"byte_end":40150,"line_start":1227,"line_end":1227,"column_start":1,"column_end":83,"is_primary":false,"text":[{"text":"from_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }","highlight_start":1,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple_peel!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":39934,"byte_end":39978,"line_start":1223,"line_end":1223,"column_start":1,"column_end":45,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple_peel {","highlight_start":1,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"from_redis_value_for_tuple!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":37479,"byte_end":37518,"line_start":1164,"line_end":1164,"column_start":1,"column_end":40,"is_primary":false,"text":[{"text":"macro_rules! from_redis_value_for_tuple {","highlight_start":1,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"invalid_type_error!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs","byte_start":287,"byte_end":318,"line_start":12,"line_end":12,"column_start":1,"column_end":32,"is_primary":false,"text":[{"text":"macro_rules! invalid_type_error {","highlight_start":1,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"fail!","def_site_span":{"file_name":"/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs","byte_start":15,"byte_end":32,"line_start":3,"line_end":3,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! fail {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"macro invocations at the end of a block are treated as expressions","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to ignore the value produced by the macro, add a semicolon after the invocation of `fail`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`#[allow(semicolon_in_expressions_from_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: trailing semicolon in macro used in expression position\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/macros.rs:5:54\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        return Err(::std::convert::From::from($expr));\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/0x4ka5h/.cargo/registry/src/index.crates.io-6f17d22bba15001f/redis-0.20.2/src/types.rs:1227:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1227\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfrom_redis_value_for_tuple! { T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, }\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #79813 <https://github.com/rust-lang/rust/issues/79813>\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: macro invocations at the end of a block are treated as expressions\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: to ignore the value produced by the macro, add a semicolon after the invocation of `fail`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[allow(semicolon_in_expressions_from_macros)]` on by default\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `fail` which comes from the expansion of the macro `from_redis_value_for_tuple` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}]}
